/*
 * Options.java
 *
 * Created on 22-mar-2011, 2.08.36
 */

package com.oryzone.mvdetector.gui;

import com.oryzone.mvdetector.DetectorOptions;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Luciano
 */
public class OptionsWindow extends javax.swing.JFrame {

    /**
     * The options object reference
     */
    DetectorOptions options;

    
    /** Creates new form Options */
    public OptionsWindow(DetectorOptions options) {
        initComponents();
        initComponentsCustomCode();
        this.options = options;
        this.setValuesFromOptions();
    }


    /**
     * Sets all the field values from the options
     */
    private void setValuesFromOptions()
    {
        this.slider_warningSensibility.setValue((int)(options.getWarningSensibility()*100));
        this.spinner_warningDuration.setValue(options.getWarningDuration());
        this.spinner_frameWidth.setValue(options.getFrameDimension().width);
        this.spinner_frameHeight.setValue(options.getFrameDimension().height);
        this.check_coloredImageDifference.setSelected(options.usingColoredDifference());
        this.check_action_playBeep.setSelected(options.isActionPlayBeepSoundEnabled());
        this.check_actionSaveFrames.setSelected(options.isActionSaveFramesEnabled());
        this.check_actionFaceDetection.setSelected(options.isActionSaveFramesUseFaceDetection());
        this.check_registerLog.setSelected(options.isActionRegisterLogEnabled());
        this.check_shellCommand.setSelected(options.isActionExecuteCommandEnabled());
        this.text_shellCommand.setText(options.getActionExecuteCommandText());
        this.text_shellCommand.setEnabled(options.isActionExecuteCommandEnabled());
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        spinner_frameWidth = new javax.swing.JSpinner();
        spinner_frameHeight = new javax.swing.JSpinner();
        check_coloredImageDifference = new javax.swing.JCheckBox();
        button_reset = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        slider_warningSensibility = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        lbl_sensibility_value = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        spinner_warningDuration = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        check_action_playBeep = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        check_actionSaveFrames = new javax.swing.JCheckBox();
        check_actionFaceDetection = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        check_registerLog = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        check_shellCommand = new javax.swing.JCheckBox();
        text_shellCommand = new javax.swing.JTextField();

        setTitle("Options");

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Frame size"));
        jPanel4.setPreferredSize(new java.awt.Dimension(350, 152));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Height");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel4.add(jLabel3, gridBagConstraints);

        jLabel5.setText("Width");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel4.add(jLabel5, gridBagConstraints);

        spinner_frameWidth.setModel(new javax.swing.SpinnerNumberModel(640, 0, 9999, 1));
        spinner_frameWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                onSpinnerFrameWidthChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel4.add(spinner_frameWidth, gridBagConstraints);

        spinner_frameHeight.setModel(new javax.swing.SpinnerNumberModel(480, 0, 9999, 1));
        spinner_frameHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                onSpinnerFrameHeightChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel4.add(spinner_frameHeight, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = -70;
        jPanel3.add(jPanel4, gridBagConstraints);

        check_coloredImageDifference.setText("Colored Image Difference (slower)");
        check_coloredImageDifference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCheckColoredImageDifferenceAction(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel3.add(check_coloredImageDifference, gridBagConstraints);

        button_reset.setText("Reset to default");
        button_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onResetToDefaultAction(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 25, 0);
        jPanel3.add(button_reset, gridBagConstraints);

        jTabbedPane1.addTab("General", jPanel3);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Sensibility");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jLabel1, gridBagConstraints);

        slider_warningSensibility.setValue(10);
        slider_warningSensibility.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                onSliderWarningSensibilityChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(slider_warningSensibility, gridBagConstraints);

        jLabel2.setText("Duration");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jLabel2, gridBagConstraints);

        lbl_sensibility_value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_sensibility_value.setText("10%");
        lbl_sensibility_value.setPreferredSize(new java.awt.Dimension(50, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(lbl_sensibility_value, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("secs");
        jLabel4.setPreferredSize(new java.awt.Dimension(50, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jLabel4, gridBagConstraints);

        spinner_warningDuration.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(1), null, Integer.valueOf(1)));
        spinner_warningDuration.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                onSpinnerWarningDurationChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(spinner_warningDuration, gridBagConstraints);

        jTabbedPane1.addTab("Warning", jPanel2);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(null);
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Play system BEEP"));
        jPanel6.setPreferredSize(new java.awt.Dimension(300, 60));

        check_action_playBeep.setText("Enabled");
        check_action_playBeep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCheckActionPlayBeepChange(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(check_action_playBeep)
                .addContainerGap(190, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(check_action_playBeep)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        jPanel5.add(jPanel6, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Save frames"));
        jPanel8.setPreferredSize(new java.awt.Dimension(300, 80));

        check_actionSaveFrames.setText("Enabled");
        check_actionSaveFrames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCheckActionSaveFrameChanged(evt);
            }
        });

        check_actionFaceDetection.setText("FaceDetection");
        check_actionFaceDetection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCheckActionFaceDetectionChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(17, 17, 17)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(check_actionFaceDetection)
                        .addContainerGap())
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(check_actionSaveFrames, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(210, 210, 210))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(check_actionSaveFrames)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(check_actionFaceDetection)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        jPanel5.add(jPanel8, gridBagConstraints);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Register log"));
        jPanel9.setPreferredSize(new java.awt.Dimension(300, 60));

        check_registerLog.setText("Enabled");
        check_registerLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCheckRegisterLogChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .add(check_registerLog)
                .addContainerGap(190, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(check_registerLog)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        jPanel5.add(jPanel9, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Execute shell command"));
        jPanel7.setPreferredSize(new java.awt.Dimension(300, 90));
        jPanel7.setSize(new java.awt.Dimension(100, 90));

        check_shellCommand.setText("Enabled");
        check_shellCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onActionExecuteShellCommandChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(text_shellCommand, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .add(check_shellCommand))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(check_shellCommand)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(text_shellCommand, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        jPanel5.add(jPanel7, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel5);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Actions", jPanel1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 415, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onCheckColoredImageDifferenceAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCheckColoredImageDifferenceAction
        this.options.setUseColoredDifference(this.check_coloredImageDifference.isSelected());
    }//GEN-LAST:event_onCheckColoredImageDifferenceAction

    private void onResetToDefaultAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onResetToDefaultAction
        this.options.loadDefaults();
        this.setValuesFromOptions();
    }//GEN-LAST:event_onResetToDefaultAction

    private void onSpinnerFrameWidthChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_onSpinnerFrameWidthChange
        this.options.getFrameDimension().width = (Integer)this.spinner_frameWidth.getValue();
    }//GEN-LAST:event_onSpinnerFrameWidthChange

    private void onSpinnerFrameHeightChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_onSpinnerFrameHeightChange
        this.options.getFrameDimension().height = (Integer)this.spinner_frameHeight.getValue();
    }//GEN-LAST:event_onSpinnerFrameHeightChange

    private void onSpinnerWarningDurationChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_onSpinnerWarningDurationChange
        this.options.setWarningDuration((Integer)this.spinner_warningDuration.getValue());
    }//GEN-LAST:event_onSpinnerWarningDurationChange

    private void onSliderWarningSensibilityChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_onSliderWarningSensibilityChange
        this.options.setWarningSensibility((float)(this.slider_warningSensibility.getValue())/100);
        this.lbl_sensibility_value.setText(this.slider_warningSensibility.getValue() + "%");
    }//GEN-LAST:event_onSliderWarningSensibilityChange

    private void onCheckActionPlayBeepChange(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCheckActionPlayBeepChange
        this.options.setActionPlayBeepSoundEnabled(this.check_action_playBeep.isSelected());
    }//GEN-LAST:event_onCheckActionPlayBeepChange

    private void onCheckActionSaveFrameChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCheckActionSaveFrameChanged
        this.options.setActionSaveFramesEnabled(this.check_actionSaveFrames.isSelected());
    }//GEN-LAST:event_onCheckActionSaveFrameChanged

    private void onCheckActionFaceDetectionChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCheckActionFaceDetectionChanged
        this.options.setActionSaveFramesUseFaceDetection(this.check_actionFaceDetection.isSelected());
    }//GEN-LAST:event_onCheckActionFaceDetectionChanged

    private void onCheckRegisterLogChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCheckRegisterLogChanged
        this.options.setActionRegisterLogEnabled(this.check_registerLog.isSelected());
    }//GEN-LAST:event_onCheckRegisterLogChanged

    private void onActionExecuteShellCommandChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onActionExecuteShellCommandChanged
        this.options.setActionExecuteCommandEnabled(this.check_shellCommand.isSelected());
        this.text_shellCommand.setEnabled(this.check_shellCommand.isSelected());
    }//GEN-LAST:event_onActionExecuteShellCommandChanged

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_reset;
    private javax.swing.JCheckBox check_actionFaceDetection;
    private javax.swing.JCheckBox check_actionSaveFrames;
    private javax.swing.JCheckBox check_action_playBeep;
    private javax.swing.JCheckBox check_coloredImageDifference;
    private javax.swing.JCheckBox check_registerLog;
    private javax.swing.JCheckBox check_shellCommand;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_sensibility_value;
    private javax.swing.JSlider slider_warningSensibility;
    private javax.swing.JSpinner spinner_frameHeight;
    private javax.swing.JSpinner spinner_frameWidth;
    private javax.swing.JSpinner spinner_warningDuration;
    private javax.swing.JTextField text_shellCommand;
    // End of variables declaration//GEN-END:variables


    private void initComponentsCustomCode()
    {
        this.text_shellCommand.getDocument().addDocumentListener(new DocumentListener(){


            @Override
            public void insertUpdate(DocumentEvent de)
            {
                this.updateOptions();
            }


            @Override
            public void removeUpdate(DocumentEvent de)
            {
                this.updateOptions();
            }


            @Override
            public void changedUpdate(DocumentEvent de)
            {
                this.updateOptions();
            }
            
            protected void updateOptions()
            {
                options.setActionExecuteCommandText(text_shellCommand.getText());
            }
            
        });
    }

}
